#
# ---------------------------------------------------------------------
# GLPI - Gestionnaire Libre de Parc Informatique
# Copyright (C) 2015-2019 Teclib' and contributors.
#
# http://glpi-project.org
#
# based on GLPI - Gestionnaire Libre de Parc Informatique
# Copyright (C) 2003-2014 by the INDEPNET Development Team.
#
# ---------------------------------------------------------------------
#
# LICENSE
#
# This file is part of GLPI.
#
# GLPI is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# GLPI is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GLPI. If not, see <http://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------
#
imports:
    - { resource: slim.yaml }

parameters:
    cache_directory: !php/const GLPI_CACHE_DIR

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in services.
        autoconfigure: true # Automatically registers services based on their signature (event subscribers).
        public: true        # Make all services public to make them accessible using "$container->get()".

    # makes classes in src/Glpi/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Glpi\:
        resource: '%kernel.project_dir%/src/Glpi/*'
        exclude: '%kernel.project_dir%/src/Glpi/{Annotation,DependencyInjection,Event,Kernel.php}'

#### Glpi services below

    Glpi\Application\View\TwigView:
        arguments:
            - '%kernel.project_dir%/templates'
            - cache: '%cache_directory%'
              strict_variables: true
              auto_reload: true
        calls:
            - method: 'addExtension'
              arguments: ['@Glpi\Application\View\TwigExtension\GlpiDebug']
            - method: 'addExtension'
              arguments: ['@Glpi\Application\View\TwigExtension\Locales']
            - method: 'addExtension'
              arguments: ['@Glpi\Application\View\TwigExtension\Reflection']
            - method: 'addExtension'
              arguments: ['@Glpi\Application\View\TwigExtension\RouterExtension']

    # Glpi\Cache\SimpleCache service is synthetic as it may be instanciate prior to container compilation
    Glpi\Cache\SimpleCache:
        synthetic: true

    # Glpi\Config service is synthetic as it requires loading of data inside DB
    Glpi\Config:
        synthetic: true

#### Legacy services below

    # DBmysql service is synthetic as it may sometime be unavailable (before install process)
    # and therefore will be added during container compilation process
    DBmysql:
        synthetic: true

    # Following services are manually declared as they cannot be included using an include/exclude rule
    Plugin:
        class: 'Plugin'

#### Vendor services below

    Doctrine\Common\Annotations\Reader:
        class: 'Doctrine\Common\Annotations\AnnotationReader'
        arguments:
            - ~
            - '@Doctrine\Common\Annotations\AnnotationRegistry' # useless but forces calls on AnnotationRegistry service

    Doctrine\Common\Annotations\AnnotationRegistry:
        class: 'Doctrine\Common\Annotations\AnnotationRegistry'
        calls:
            - method: 'registerAutoloadNamespace'
              arguments:
                  - 'Glpi'
                  - '%kernel.project_dir%/src/'

    Slim\Flash\Messages:
        class: 'Slim\Flash\Messages'
